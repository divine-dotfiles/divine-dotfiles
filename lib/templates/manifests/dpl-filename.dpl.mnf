#:title:        Asset manifest annotated template
#:author:       Grove Pyree
#:email:        grayarea@protonmail.ch
#:revnumber:    9
#:revdate:      2019.08.07
#:revremark:    Grand removal of non-ASCII chars
#:created_at:   2019.08.06

## This is an annotated example of an asset manifest. It is simply a list of 
#. files (e.g., config files) required by a particular deployment. What a 
#. manifest does is it allows framework to automatically copy provided initial 
#. versions of assets to user's Grail directory (no overwriting!), where these 
#. versions will then be worked with by the deployment.
#
## Asset manifest must be placed next to deployment file and named identically, 
#. except for changing suffix from '*.dpl.sh' to '*.dpl.mnf'. Alternatively, 
#. full path to manifest file may be provided in the root of deployment file by 
#. assigning it to global variable $D__DPL_MNF_PATH.
#
## Paths to assets must be given relative to deployment directory, as recorded 
#. in $D__DPL_DIR. One path/pattern is written per line.
#
## Each valid manifest line may be flagged as a regular expression. Within a 
#. regex, only four special symbols are recognized: '[', ']', '*', and '?'. 
#. (Under the hood, the pattern is used as '-path' primary of 'find' utility.)
#. Assets with fixed path are required in order for deployment to work, but 
#. presence of regex assets is optional.
#
## Each manifest line may also have a path prefix. Prefix is attached to the 
#. path when locating the asset, but is not carried over to the copying 
#. destination. Prefix is useful when you move your assets into a sub-directory 
#. within deployment directory, but don't want that sub-directory to appear in 
#. user's Grail. Leading and trailing slashes in prefix are optional.
#
#. Flags and prefixes may be set at the beginning of the line (before asset 
#. path) within individual pairs of parentheses:
#>    (prefix: subdir)            dir/asset1
#>    (flags: r)                  dir/asset*.sh   # Flag 'r' stands for regex
#>    (prefix: subdir) (flags: r) asset*.cfg
#
## With regard to flags, a shorthand is provided, that works by *appending* 
#. provided flags as opposed to overriding them as is normal:
#>    (r)   ax[0-9]+    # Parentheses must not contain ':'
#
## Lines may be made exclusive to particular OS family or distro. List of them 
#. may be provided by separating with vartical bars:
#>    (os: debian)      asset1
#>    (os: macos|bsd)   asset2
#>    (os: all)         asset3    # 'all'/'any' are reserved to denote any OS
#
## NOTE: OS name is matched against $D__OS_FAMILY and $D__OS_DISTRO variables. 
#. Single match against any of the two is sufficient. For reference and list of 
#. supported OS's, browse through OS adapters in lib/adapters.
#
## All parenthesized key-values, when they appear on a line without an asset 
#. path, come into effect until the end of the file, or until another value is 
#. assigned to the same key:
#>    ( os : macos ) ( flags : r )      ## These will remain in effect until 
#.                                      #. end of file or until overridden
#
## Hash/pound symbol ('#') comments out the rest of the line. A line may be 
#. 'glued' to the next by terminating it with a backslash ('\'):
#>    (os: fedora) \      ## This is a single logical line
#>    (prefix: subdir) \  #. spanning three actual lines
#>    /dir/asset          #. (yes, even with comments attached like this)
#
## Whitespace rules in general are fairly permissive:
#.  * Whitespace within paths is not touched, at the edges - trimmed
#.  * Whitespace between keywords and separators is optional
#
## Within a key-value parentheses, a literal closing parenthesis must be 
#. escaped with a backslash. Same goes for comment-creating hash/pound.
#
## If a line starts with a backslash, exactly one backslash will be removed at 
#. the start. To end a line with a literal backslash, every literal backslash 
#. *at the end of the line* must be doubled.
#

# Below are examples of regular assets:
fileA.cfg
fileB.cfg
file/in/subdir

# Below are examples of regex assets:
(r)     file[0-9].txt
(r)     some/*.files

(prefix:subdir)   # Lines below are stored in 'subdir' directory
one.f
two.f

(os: debian|bsd)  # Lines below are only considered on Debian or BSD
(prefix:)         # Removing prefix from above, as it is still in force
        file-only-on-debian-or-bsd.ext
(r)     dir/only/on/*.debian-or-bsd